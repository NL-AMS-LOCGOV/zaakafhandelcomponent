name: Build, test & deploy

on:
  pull_request:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  JAVA_VERSION: '17'
  CONTAINER_REGISTRY_URL: 'ghcr.io/infonl'
  APPLICATION_NAME: 'dimpact-zac'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    outputs:
      branch_name: ${{ steps.gen_branch_name.outputs.BRANCH_NAME }}
      build_number: ${{ steps.gen_build_number.outputs.BUILD_NUMBER }}
      docker_image_tag: ${{ steps.gen_tag.outputs.DOCKER_IMAGE_TAG }}
    steps:
      - uses: actions/checkout@v3

      - name: Set branch name
        id: gen_branch_name
        run: echo "BRANCH_NAME=${{ github.ref_name }}" | sed 's/\//_/g; s/(//g; s/)//g' >> $GITHUB_OUTPUT

      - name: Set build number
        id: gen_build_number
        run: echo "BUILD_NUMBER=${{ steps.gen_branch_name.outputs.BRANCH_NAME }}-${{ github.run_number }}" >> $GITHUB_OUTPUT

      - name: Set Docker image tag
        id: gen_tag
        run: echo "DOCKER_IMAGE_TAG=${{ env.CONTAINER_REGISTRY_URL }}/${{ env.APPLICATION_NAME }}:${{ steps.gen_build_number.outputs.BUILD_NUMBER }}" >> $GITHUB_OUTPUT

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: maven

      - name: Maven build
        run: mvn --batch-mode --update-snapshots package -DskipTests

      - name: Cache build artefacts
        uses: actions/cache/save@v3
        with:
          path: |
            target/
          key: build-${{ github.repository }}-${{ github.ref_name }}-${{ github.run_number }}

  unit-tests:
    needs: [build]
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: maven

      - name: Restore build artefacts
        uses: actions/cache/restore@v3
        with:
          path: |
            target/
          key: build-${{ github.repository }}-${{ github.ref_name }}-${{ github.run_number }}

      - name: Run unit tests
        run: mvn test --batch-mode -Dskip.npm

  build-docker-image:
      needs: [build]
      runs-on: ubuntu-latest
      timeout-minutes: 30
      env:
        BUILD_NUMBER: ${{ needs.build.outputs.build_number }}
        DOCKER_IMAGE_TAG: ${{ needs.build.outputs.docker_image_tag }}
        GIT_COMMIT_HASH: ${{ github.sha }}
      steps:
        - uses: actions/checkout@v3

        - name: Build Docker image
          run: |
            docker build --tag ${DOCKER_IMAGE_TAG} \
            --build-arg versienummer=${BUILD_NUMBER} \
            --build-arg buildId=${BUILD_NUMBER} \
            --build-arg commit=${GIT_COMMIT_HASH} \
            --file Containerfile \
            .

        - name: Save Docker Image
          run: docker save --output docker-image.tar ${DOCKER_IMAGE_TAG}

        - name: Cache Docker Image
          uses: actions/cache/save@v3
          with:
            path: docker-image.tar
            key: docker-image-${{ github.repository }}-${{ github.ref_name }}-${{ github.run_number }}

  push-docker-image:
    needs: [build, unit-tests, build-docker-image]
    runs-on: ubuntu-latest
    timeout-minutes: 30
    if: github.ref == 'refs/heads/main'
    env:
      DOCKER_IMAGE_TAG: ${{ needs.build.outputs.docker_image_tag }}
    steps:
      - name: Docker Login
        uses: docker/login-action@v2
        with:
          registry: ${{ env.CONTAINER_REGISTRY_URL }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Restore Docker Image
        uses: actions/cache/restore@v3
        with:
          path: docker-image.tar
          key: docker-image-${{ github.repository }}-${{ github.ref_name }}-${{ github.run_number }}

      - name: Load Docker Image
        run: docker load --input docker-image.tar

      - name: Push Docker Image
        run: docker push ${DOCKER_IMAGE_TAG}
